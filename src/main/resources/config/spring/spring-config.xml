<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描  @Controller -->
    <context:component-scan base-package="com.dzdp.service"/>
    <context:component-scan base-package="com.dzdp.dao"/>
    <!--启用spring的一些annotation -->
    <context:annotation-config/>

    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <mvc:annotation-driven/>

    <!--解决静态资源文件无法被springMvc加载的问题，方法一-->
    <!--静态资源映射-->
    <!--本项目把静态资源放在了webapp的statics目录下，资源映射如下-->
    <!--<mvc:resources mapping="/css/**" location="/WEB-INF/statics/css/"/>-->
    <!--<mvc:resources mapping="/js/**" location="/WEB-INF/statics/js/"/>-->
    <!--<mvc:resources mapping="/image/**" location="/WEB-INF/statics/image/"/>-->

    <!--解决静态资源文件无法被springMvc加载的问题，方法二-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <!-- 异常拦截 -->
    <bean id="exceptionResolver" class="com.dzdp.utils.exception.ExceptionForWeb"/>


    <!--&lt;!&ndash;避免IE执行AJAX时，返回JSON出现下载文件 &ndash;&gt;-->
    <!--<bean id="mappingJacksonHttpMessageConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>application/json;charset=UTF-8</value>-->
                <!--<value>text/json</value>-->
                <!--<value>text/html;charset=UTF-8</value>-->
                <!--&lt;!&ndash;兼容在IE10以上的浏览器正常回传解析json&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 启动SpringMVC的注解功能，完成请求和注解POJO的映射 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="mappingJacksonHttpMessageConverter"/>-->
                <!--&lt;!&ndash; JSON转换器 &ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter"/>-->
    <!--&lt;!&ndash;在拦截器中将handler对象强转成HandlerMethod类型需要配置如下三个bean 否则会初始化报错&ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="mappingJacksonHttpMessageConverter"/>-->
                <!--<ref bean="stringHttpMessageConverter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>


    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 上传文件大小限制为31M，31*1024*1024 -->
        <property name="maxUploadSize" value="32505856"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="4096"/>
    </bean>


</beans>